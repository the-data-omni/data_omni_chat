import{r as m,v as z,bD as I,bN as ee,bO as te,bt as C,j as e,H as ae,a as re,B as G,S as D,T as f,a0 as N,b as x,bP as se,be as ne,bJ as oe,bm as ie,bn as ce,aL as le,bF as l,bg as O}from"./index-C5-7V04H.js";import{l as de}from"./CloudArrowUp-CUm7yqf5.js";import{T as me}from"./table-5-BPuvKFkd.js";import{g as ue}from"./getGitHubStoredConfig-Cg4sBu5t.js";import{L as pe}from"./LinearProgress-CTIsyjhu.js";import"./Check-BMNnZQ-D.js";import"./MagnifyingGlass-BmE9XFG2.js";import"./PencilSimple-D7AjZ8DX.js";import"./PencilSimple-DN8YatLk.js";import"./data-table-XenAvZ69.js";import"./TableHead-BnjFcU27.js";import"./option-BD2v2nDd.js";import"./Card-D72Z6VP3.js";import"./FormGroup-R3IoemcS.js";import"./TablePagination-CjbpsP_k.js";var he=Object.defineProperty,ge=Object.defineProperties,fe=Object.getOwnPropertyDescriptors,A=Object.getOwnPropertySymbols,be=Object.prototype.hasOwnProperty,ye=Object.prototype.propertyIsEnumerable,F=(o,t,c)=>t in o?he(o,t,{enumerable:!0,configurable:!0,writable:!0,value:c}):o[t]=c,_e=(o,t)=>{for(var c in t||(t={}))be.call(t,c)&&F(o,c,t[c]);if(A)for(var c of A(t))ye.call(t,c)&&F(o,c,t[c]);return o},we=(o,t)=>ge(o,fe(t));const H=m.forwardRef((o,t)=>z.createElement(I,we(_e({ref:t},o),{weights:ee})));H.displayName="ArrowCounterClockwise";var xe=Object.defineProperty,je=Object.defineProperties,ve=Object.getOwnPropertyDescriptors,E=Object.getOwnPropertySymbols,Se=Object.prototype.hasOwnProperty,Pe=Object.prototype.propertyIsEnumerable,k=(o,t,c)=>t in o?xe(o,t,{enumerable:!0,configurable:!0,writable:!0,value:c}):o[t]=c,Ce=(o,t)=>{for(var c in t||(t={}))Se.call(t,c)&&k(o,c,t[c]);if(E)for(var c of E(t))Pe.call(t,c)&&k(o,c,t[c]);return o},De=(o,t)=>je(o,ve(t));const B=m.forwardRef((o,t)=>z.createElement(I,De(Ce({ref:t},o),{weights:de})));B.displayName="CloudArrowUp";const Oe={title:`Create | Products | Dashboard | ${re.name}`};function Je(){const[o,t]=m.useState(!1),[c,b]=m.useState(0),{columns:M,openDrawer:U}=te(),p=m.useRef(null),[a,L]=m.useState(null),[v,$]=m.useState(!1),[S,J]=m.useState(null),[h,g]=m.useState({total:0,current:0,message:"",inProgress:!1});m.useEffect(()=>{L(ue()),J({gcp_project_id:"my-uscis-project",dataset_id:"rag_orchestrator_dataset",region:"us-central1",vertex_connection_name:"us.vertex-ai-connection",embedding_model_endpoint:"text_embedding_model"})},[]);const Q=async()=>{var r,i;t(!0),b(1);try{const s=localStorage.getItem("scrapedData");if(!s)throw new Error("No scraped data found in localStorage.");const d=JSON.parse(s);if(!Array.isArray(d)||d.length===0)throw new Error("Scraped data is empty or invalid.");b(2);const n=(r=p.current)==null?void 0:r.getAugmentedData();if(!n||n.length===0)throw new Error("No data in the table to update.");let _=!1;const P=n.map(u=>{const w={...u};if(!w.description){const j=d.find(T=>T.tableName.toLowerCase()===w.table_name.toLowerCase()&&T.columnName.toLowerCase()===w.column_name.toLowerCase());j!=null&&j.columnDesc&&(w.description=j.columnDesc,_=!0)}return w});_?((i=p.current)==null||i.updateDataExternally(P),l.success("Descriptions from scraped data have been applied where fields were empty."),b(3)):(l.info("No missing descriptions were found, or no matching scraped data to populate."),b(0))}catch(s){console.error("Error applying descriptions:",s),l.error(`An error occurred: ${s.message}`),b(-1)}finally{setTimeout(()=>t(!1),1800)}},y=C({mutationFn:async r=>{const i=await O("http://localhost:8000/api/git/schema/save",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!i.ok){const s=await i.json().catch(()=>({detail:`HTTP error ${i.status}`}));throw new Error(s.detail||`HTTP error ${i.status}`)}return i.json()},onSuccess:r=>{r.success?(l.success(`Schema saved to GitHub successfully! File: ${r.file_path}`),$(!1)):l.error(`Failed to save schema to GitHub: ${r.message||r.error}`)},onError:r=>l.error(`Error saving schema to GitHub: ${r.message}`)}),R=()=>{var d;if(!(a!=null&&a.isConfigured)||!a.owner||!a.repoName){l.error("GitHub configuration is incomplete. Please set it up in the GitHub Setup page.");return}const r=(d=p.current)==null?void 0:d.getAugmentedData();if(!r||r.length===0){l.info("No schema data available to save.");return}const i=r.map(n=>({table_catalog:n.table_catalog,table_schema:n.table_schema,table_name:n.table_name,column_name:n.column_name,field_path:n.field_path,data_type:n.data_type,description:n.description,collation_name:n.collation_name,rounding_mode:n.rounding_mode,primary_key:n.primary_key,foreign_key:n.foreign_key,field_mode:n.field_mode||null,access_instructions:n.access_instructions||null})),s=`Updated schema via UI: ${i.length} items. By: ${a.authorName||"RAG UI User"}`;y.mutate({git_config:{owner:a.owner,repo_name:a.repoName,branch:a.branch,github_pat:a.pat,repo_url:a.repoUrl},target_file_name:a.schemaFileName,schema_data:i,commit_message:s})},W=C({mutationFn:async r=>{const i=await O("http://localhost:8000/api/git/schema/load",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!i.ok){const s=await i.json();throw new Error(s.detail||"Failed to load schema from GitHub")}return i.json()}}),q=C({mutationFn:async r=>{const i=await O("http://localhost:8000/api/schema",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!i.ok){const s=await i.json(),d=typeof s.detail=="string"?s.detail:JSON.stringify(s.detail);throw new Error(d||`Failed to push schema for table ${r.table_name}`)}return i.json()}}),V=async()=>{var r;if(!S){l.error("API configuration is not loaded. Please wait or refresh the page.");return}if(!(a!=null&&a.isConfigured)){l.error("GitHub is not configured. Please complete the setup first.");return}g({total:0,current:0,message:"Fetching schema from GitHub...",inProgress:!0});try{const i=await W.mutateAsync({git_config:{owner:a.owner,repo_name:a.repoName,branch:a.branch,github_pat:a.pat,repo_url:a.repoUrl},target_file_name:a.schemaFileName}),s=new Map;if(i.schema_data.forEach(n=>{s.has(n.table_name)||s.set(n.table_name,[]),s.get(n.table_name).push(n)}),s.size===0){l.info("No tables found in the schema file from GitHub."),g({total:0,current:0,message:"",inProgress:!1});return}g({total:s.size,current:0,message:`Found ${s.size} tables. Starting push...`,inProgress:!0});let d=1;for(const[n,_]of s.entries()){g(u=>({...u,current:d,message:`Pushing table ${d}/${s.size}: ${n}`}));const P={config:S,dataset_name:((r=_[0])==null?void 0:r.table_schema)||"default_schema",table_name:n,table_description:`Schema for ${n} loaded from GitHub.`,fields:_.map(u=>({field_name:u.column_name,field_type:u.data_type,field_description:u.description||"N/A"}))};await q.mutateAsync(P),d++}g({total:s.size,current:s.size,message:"Completed successfully!",inProgress:!1}),l.success("All table schemas have been pushed to BigQuery!")}catch(i){g({total:0,current:0,message:`Error: ${i.message}`,inProgress:!1}),l.error(`An error occurred: ${i.message}`)}},K=m.useCallback(r=>{$(r)},[]),X=()=>{p.current&&p.current.revertToOriginal()},Y=!v||!(a!=null&&a.isConfigured)||y.isPending,Z=a!=null&&a.isConfigured?v?"":"No changes to save":"GitHub is not configured. Please set it up first.";return e.jsxs(m.Fragment,{children:[e.jsx(ae,{children:e.jsx("title",{children:Oe.title})}),e.jsx(G,{sx:{maxWidth:"var(--Content-maxWidth)",m:"var(--Content-margin)",p:"var(--Content-padding)",width:"var(--Content-width)"},children:e.jsxs(D,{spacing:4,children:[e.jsxs(D,{direction:"row",alignItems:"center",justifyContent:"space-between",sx:{mb:2},children:[e.jsx(f,{variant:"h4",children:"Database Catalog"}),e.jsxs(D,{direction:"row",spacing:1,sx:{flexWrap:"wrap",gap:1},children:[e.jsx(N,{title:"Fetch schema from GitHub and push embeddings to BigQuery",children:e.jsx("span",{children:e.jsx(x,{variant:"contained",color:"secondary",startIcon:e.jsx(B,{size:16}),onClick:V,size:"small",disabled:!(a!=null&&a.isConfigured)||!S||h.inProgress,children:"Push to BigQuery"})})}),e.jsx(x,{variant:"outlined",onClick:Q,size:"small",children:"Get Descriptions"}),e.jsx(x,{variant:"outlined",color:"warning",startIcon:e.jsx(H,{size:16}),onClick:X,size:"small",disabled:!v||y.isPending,children:"Undo Changes"}),e.jsx(N,{title:Z,children:e.jsx("span",{children:e.jsx(x,{variant:"contained",color:"primary",startIcon:e.jsx(se,{size:16}),onClick:R,size:"small",disabled:Y,children:y.isPending?"Saving...":"Save Schema to GitHub"})})}),e.jsx(x,{variant:"contained",color:"secondary",disabled:M.length===0,onClick:()=>U(),size:"small",children:"View Query"})]})]}),!(a!=null&&a.isConfigured)&&e.jsxs(ne,{severity:"warning",sx:{mb:2},children:["GitHub integration is not fully configured. Please visit the"," ",e.jsx(oe,{to:"/dashboard/settings/github-setup",style:{textDecoration:"none"},children:e.jsx(f,{component:"span",color:"warning.dark",sx:{fontWeight:"bold",textDecoration:"underline",cursor:"pointer","&:hover":{textDecoration:"none"}},children:"GitHub Setup page"})})," ","to complete the configuration."]}),h.inProgress&&e.jsxs(G,{sx:{width:"100%",my:2},children:[e.jsx(f,{variant:"body2",sx:{mb:1},children:h.message}),e.jsx(pe,{variant:"determinate",value:h.total>0?h.current/h.total*100:0})]}),y.isPending&&e.jsx(f,{variant:"body2",sx:{textAlign:"center",my:1,color:"primary.main"},children:"Saving schema to GitHub, please wait..."}),e.jsx(me,{ref:p,onModifiedStatusChange:K})]})}),e.jsx(ie,{open:o,children:e.jsx(ce,{sx:{display:"flex",alignItems:"center",gap:2},children:c===1?e.jsxs(e.Fragment,{children:[e.jsx(le,{size:24}),e.jsx(f,{children:"Scanning schema..."})]}):e.jsx(f,{children:"Descriptions updated!"})})})]})}export{Je as Page};
